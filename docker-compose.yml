version: "3"
services:
  mongo-rs0-1:
    image: "mongo-start"
    build: ./mongo-rs0-1
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-rs0-1/data:/data/db
    depends_on:
      - "mongo-rs0-2"
      - "mongo-rs0-3"

  mongo-rs0-2:
    image: "mongo"
    command: --replSet rs0  --oplogSize 128
    ports:
      - "27018:27017"
    volumes:
      - ./mongo-rs0-2/data:/data/db

  mongo-rs0-3:
    image: "mongo"
    command: --replSet rs0  --oplogSize 128
    ports:
      - "27019:27017"
    volumes:
      - ./mongo-rs0-3/data:/data/db

  setup-rs:
    image: "mongo"
    volumes:
      - ./setup/setup.sh:/app/setup.sh
      - ./setup/replicaSet.js:/app/replicaSet.js
    depends_on:
      - "mongo-rs0-1"
      - "mongo-rs0-2"
      - "mongo-rs0-3"
    command: "sleep 1h"

  adminmongo:
    image: "mrvautin/adminmongo"
    ports:
      - "1234:1234"
    environment:
      HOST: "0.0.0.0"
      PORT: "1234"

  #Test Application
  web-app:
    image: docker-node-express-mongoreplicaset-app
    build: ./web-site
    ports:
      - "3000:3000"
    volumes:
      - ./web-site:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - "setup-rs"

  portainer:
    image: "portainer/portainer:latest"
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    expose:
      - "9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer_data:/data"

volumes:
  portainer_data:
    driver: local
